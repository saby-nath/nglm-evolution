<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.evolving.nglm</groupId>
  <artifactId>nglm-evolution</artifactId>
  <packaging>jar</packaging>
  <version>gitversion</version>
  <name>evolution</name>
  <url>http://maven.sixthsensemedia.com:8090/repository/internal</url>
  <description>NGLM EVOLUTION</description>

  <repositories>

    <repository>
      <id>evolving-internal</id>
      <name>Evolving Internal Repository</name>
      <url>http://maven.sixthsensemedia.com:8090/repository/internal</url>
      <layout>default</layout>
    </repository>

    <repository>
      <id>evolving-snapshots</id>
      <name>Evolving Snapshots Repository</name>
      <url>http://maven.sixthsensemedia.com:8090/repository/snapshots</url>
      <layout>default</layout>
    </repository>

    <repository>
      <id>confluent</id>
      <name>Confluent Repository</name>
      <url>http://packages.confluent.io/maven/</url>
    </repository>

  </repositories>  

  <parent>
    <artifactId>nglm-core-common-build</artifactId>
    <groupId>com.evolving.nglm</groupId>
    <version>4.0.1-build180611-SNAPSHOT</version>
  </parent>

  <properties>
    
    <!-- common-build -->
    <common.build.phase.proguard>package</common.build.phase.proguard>
    <common.build.phase.generate-setup-stack>package</common.build.phase.generate-setup-stack>
    <common.build.phase.generate-connect-stack>package</common.build.phase.generate-connect-stack>
    <common.build.phase.generate-simpletransform-stack>package</common.build.phase.generate-simpletransform-stack>
    <common.build.phase.generate-grafana-stack>package</common.build.phase.generate-grafana-stack>
    <common.build.phase.generate-licensemanager-stack>package</common.build.phase.generate-licensemanager-stack>
    <common.build.phase.generate-subscribermanager-stack>package</common.build.phase.generate-subscribermanager-stack>
    <common.build.phase.generate-deployment-json>prepare-package</common.build.phase.generate-deployment-json>
    <common.build.phase.generate-nglm-scripts>prepare-package</common.build.phase.generate-nglm-scripts>
    <common.build.skip.docker-setup>false</common.build.skip.docker-setup>
    <common.build.skip.docker-connect>false</common.build.skip.docker-connect>
    <common.build.skip.docker-simpletransform>false</common.build.skip.docker-simpletransform>
    <common.build.skip.docker-grafana>false</common.build.skip.docker-grafana>
    <common.build.skip.docker-licensemanager>false</common.build.skip.docker-licensemanager>
    <common.build.skip.docker-subscribermanager>false</common.build.skip.docker-subscribermanager>

    <!-- core version -->
    <nglm.core.version>${project.parent.version}</nglm.core.version>

    <!-- configuration -->
    <profileengine.streamthreads>2</profileengine.streamthreads>
    <subscribermanager.streamthreads>2</subscribermanager.streamthreads>

    <!-- topics -->
    <topic.journey>journey</topic.journey>
    <topic.offer>offer</topic.offer>
    <topic.subscriberupdate>subscriberupdate</topic.subscriberupdate>
    <topic.assignsubscriberids_fileconnector>assignsubscriberids-fileconnector</topic.assignsubscriberids_fileconnector>
    <topic.assignsubscriberids>assignsubscriberids</topic.assignsubscriberids>
    <topic.assignexternalsubscriberids>assignexternalsubscriberids</topic.assignexternalsubscriberids>
    <topic.recordexternalsubscriberid>recordexternalsubscriberid</topic.recordexternalsubscriberid>
    <topic.recordalternateid>recordalternateid</topic.recordalternateid>
    <topic.externalaggregates>externalaggregates</topic.externalaggregates>
    <topic.externalaggregates.assignsubscriberid>externalaggregates-assignsubscriberid</topic.externalaggregates.assignsubscriberid>
    <topic.externalaggregates_fileconnector>externalaggregates-fileconnector</topic.externalaggregates_fileconnector>
    <topic.subscribergroup>subscribergroup</topic.subscribergroup>
    <topic.subscribergroup.assignsubscriberid>subscribergroup-assignsubscriberid</topic.subscribergroup.assignsubscriberid>
    <topic.subscribergroupepoch>subscribergroupepoch</topic.subscribergroupepoch>
    
    <!-- profileengine -->
    <changelog.profileengine.subscriberprofile>subscriberprofile</changelog.profileengine.subscriberprofile>
    <changelog.profileengine.subscriberprofile.topic>streams-profileengine-${changelog.profileengine.subscriberprofile}-changelog</changelog.profileengine.subscriberprofile.topic>

    <!-- subscribermanager -->
    <subscribermanager.enabled>true</subscribermanager.enabled>
    <changelog.subscribermanager.autoprovisionedsubscriber>autoprovisionedsubscriber</changelog.subscribermanager.autoprovisionedsubscriber>
    <changelog.subscribermanager.autoprovisionedsubscriber.topic>streams-subscribermanager-${changelog.subscribermanager.autoprovisionedsubscriber}-changelog</changelog.subscribermanager.autoprovisionedsubscriber.topic>
    <rekeyed.subscribermanager.autoprovisionedsubscriber.topic>streams-subscribermanager-${changelog.subscribermanager.autoprovisionedsubscriber}-rekeyed</rekeyed.subscribermanager.autoprovisionedsubscriber.topic>
    <changelog.subscribermanager.msisdn>msisdn</changelog.subscribermanager.msisdn>
    <changelog.subscribermanager.msisdn.subscriberid.topic>streams-subscribermanager-${changelog.subscribermanager.msisdn}-subscriberid-changelog</changelog.subscribermanager.msisdn.subscriberid.topic>
    <changelog.subscribermanager.msisdn.alternateid.topic>streams-subscribermanager-${changelog.subscribermanager.msisdn}-alternateid-changelog</changelog.subscribermanager.msisdn.alternateid.topic>
    <rekeyed.subscribermanager.msisdn.topic>streams-subscribermanager-${changelog.subscribermanager.msisdn}-rekeyed</rekeyed.subscribermanager.msisdn.topic>
    <backchannel.subscribermanager.msisdn.subscriberid.topic>streams-subscribermanager-${changelog.subscribermanager.msisdn}-backchannel-subscriberid</backchannel.subscribermanager.msisdn.subscriberid.topic>
    <backchannel.subscribermanager.msisdn.alternateid.topic>streams-subscribermanager-${changelog.subscribermanager.msisdn}-backchannel-alternateid</backchannel.subscribermanager.msisdn.alternateid.topic>
    <changelog.subscribermanager.contractid>contractid</changelog.subscribermanager.contractid>
    <changelog.subscribermanager.contractid.subscriberid.topic>streams-subscribermanager-${changelog.subscribermanager.contractid}-subscriberid-changelog</changelog.subscribermanager.contractid.subscriberid.topic>
    <changelog.subscribermanager.contractid.alternateid.topic>streams-subscribermanager-${changelog.subscribermanager.contractid}-alternateid-changelog</changelog.subscribermanager.contractid.alternateid.topic>
    <rekeyed.subscribermanager.contractid.topic>streams-subscribermanager-${changelog.subscribermanager.contractid}-rekeyed</rekeyed.subscribermanager.contractid.topic>
    <backchannel.subscribermanager.contractid.subscriberid.topic>streams-subscribermanager-${changelog.subscribermanager.contractid}-backchannel-subscriberid</backchannel.subscribermanager.contractid.subscriberid.topic>
    <backchannel.subscribermanager.contractid.alternateid.topic>streams-subscribermanager-${changelog.subscribermanager.contractid}-backchannel-alternateid</backchannel.subscribermanager.contractid.alternateid.topic>
    
  </properties>

  <dependencies>

    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
      <version>2.9.0</version>
    </dependency>
    
  </dependencies>

  <build>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.6.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.0.2</version>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.0.2</version>
        <executions>
          <execution>
            <id>generate-assembled-resources</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/assembled-resources</outputDirectory>
              <resources>          
                <resource>
                  <directory>src/assembly/resources</directory>
                  <includes>
                    <include>license/license.bin</include>
                    <include>license/licenseToken.bin</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>              
            </configuration>            
          </execution>
          <execution>
            <id>generate-subscribergroup-stack</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/assembled-docker/subscribergroup</outputDirectory>
              <resources>          
                <resource>
                  <directory>src/assembly/resources/docker/subscribergroup</directory>
                  <includes>
                    <include>Dockerfile</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>src/assembly/resources</directory>
                  <includes>
                    <include>bin/subscribergroup-run.sh</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>${project.build.directory}/assembled-resources</directory>
                  <includes>
                    <include>config/log4j-evol.properties</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>lib/*.jar</include>
                    <include>${project.artifactId}-${project.version}.jar</include>
                  </includes>
                  <filtering>false</filtering>
                </resource>
              </resources>              
            </configuration>            
          </execution>
          <execution>
            <id>generate-prometheus-application-docker-stack</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/assembled-docker/prometheus-application</outputDirectory>
              <resources>          
                <resource>
                  <directory>src/assembly/resources/docker/prometheus-application</directory>
                  <includes>
                    <include>Dockerfile</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>src/assembly/resources</directory>
                  <includes>
                    <include>config/prometheus-application.yml</include>
                    <include>config/prometheus-application-alert.rules</include>
                    <include>bin/prometheus-application-run.sh</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>              
            </configuration>            
          </execution>
          <execution>
            <id>generate-guimanager-docker-stack</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/assembled-docker/guimanager</outputDirectory>
              <resources>          
                <resource>
                  <directory>src/assembly/resources/docker/guimanager</directory>
                  <includes>
                    <include>Dockerfile</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>src/assembly/resources</directory>
                  <includes>
                    <include>bin/guimanager-run.sh</include>
                    <include>config/guimanager_jmx.yml</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>${project.build.directory}/assembled-resources</directory>
                  <includes>
                    <include>config/log4j-evol.properties</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>lib/*.jar</include>
                    <include>${project.artifactId}-${project.version}.jar</include>
                  </includes>
                  <filtering>false</filtering>
                </resource>
              </resources>              
            </configuration>            
          </execution>
          <execution>
            <id>generate-criteriaapi-docker-stack</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/assembled-docker/criteriaapi</outputDirectory>
              <resources>          
                <resource>
                  <directory>src/assembly/resources/docker/criteriaapi</directory>
                  <includes>
                    <include>Dockerfile</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>src/assembly/resources</directory>
                  <includes>
                    <include>bin/criteriaapi-run.sh</include>
                    <include>config/criteriaapi_jmx.yml</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>${project.build.directory}/assembled-resources</directory>
                  <includes>
                    <include>config/log4j-evol.properties</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>lib/*.jar</include>
                    <include>${project.artifactId}-${project.version}.jar</include>
                  </includes>
                  <filtering>false</filtering>
                </resource>
              </resources>              
            </configuration>            
          </execution>
          <execution>
            <id>generate-profileengine-docker-stack</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/assembled-docker/profileengine</outputDirectory>
              <resources>          
                <resource>
                  <directory>src/assembly/resources/docker/profileengine</directory>
                  <includes>
                    <include>Dockerfile</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>src/assembly/resources</directory>
                  <includes>
                    <include>bin/profileengine-run.sh</include>
                    <include>config/profileengine_jmx.yml</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>${project.build.directory}/assembled-resources</directory>
                  <includes>
                    <include>config/log4j-evol.properties</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>lib/*.jar</include>
                    <include>${project.artifactId}-${project.version}.jar</include>
                  </includes>
                  <filtering>false</filtering>
                </resource>
              </resources>              
            </configuration>            
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>generate-nglm-scripts-deployment</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <exportAntProperties>true</exportAntProperties>
              <target>
                <copy todir="${project.build.directory}/assembled-resources/bin">
                   <fileset dir="${project.basedir}/src/assembly/resources/bin" includes="update-subscribergroup.sh"/>
                </copy>                
                <copy todir="${project.build.directory}/assembled-resources/support">
                  <fileset dir="${project.basedir}/src/assembly/resources/support" includes="*.json"/>
                  <fileset dir="${project.basedir}/src/assembly/resources/support" includes="*.csv"/>
                </copy>                
                <replaceregexp match="(--.*$)|${line.separator}" replace="" flags="gm">
                  <fileset dir="${project.build.directory}/assembled-resources/support" includes="*.json"/>
                </replaceregexp>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>generate-sampledata</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <exportAntProperties>true</exportAntProperties>
              <target>
                <tstamp>
                  <format property="sampledata.externalaggregates.today" pattern="dd-MMM-yy"/>
                </tstamp>                
                <tstamp>
                  <format property="sampledata.externalaggregates.yesterday" pattern="dd-MMM-yy" offset="-1" unit="day"/>
                </tstamp>
                <tstamp>
                  <format property="sampledata.externalaggregates.onemonthago" pattern="dd-MMM-yy" offset="-1" unit="month"/>
                </tstamp>                
                <tstamp>
                  <format property="sampledata.externalaggregates.twomonthsago" pattern="dd-MMM-yy" offset="-2" unit="month"/>
                </tstamp>                
                <tstamp>
                  <format property="sampledata.detailed.todayMinus396" pattern="yyyy-MM-dd" offset="-396" unit="day"/>
                </tstamp>                
                <tstamp>
                  <format property="sampledata.detailed.yesterdayMinus396" pattern="yyyy-MM-dd" offset="-397" unit="day"/>
                </tstamp>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>generate-symlink</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <exportAntProperties>true</exportAntProperties>
              <target>
                <symlink link="${project.build.directory}/nglm-evolution.jar" resource="${project.artifactId}-${project.version}.jar"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <version>1.3.5</version>
        <executions>
          <execution>
            <id>docker-subscribergroup</id>
            <goals>
              <goal>build</goal>
              <goal>push</goal>
            </goals>
            <configuration>
              <contextDirectory>${project.build.directory}/assembled-docker/subscribergroup</contextDirectory>
              <repository>${env.DOCKER_REGISTRY}ev-subscribergroup</repository>
              <classifier>docker-info-subscribergroup</classifier>
              <tag>${project.name}-${project.version}</tag>
            </configuration>
          </execution>
          <execution>
            <id>docker-prometheus-application</id>
            <goals>
              <goal>build</goal>
              <goal>push</goal>
            </goals>
            <configuration>
              <contextDirectory>${project.build.directory}/assembled-docker/prometheus-application</contextDirectory>
              <repository>${env.DOCKER_REGISTRY}ev-prometheus-application</repository>
              <classifier>docker-info-prometheus-application</classifier>
              <tag>${project.name}-${project.version}</tag>
            </configuration>
          </execution>
          <execution>
            <id>docker-guimanager</id>
            <goals>
              <goal>build</goal>
              <goal>push</goal>
            </goals>
            <configuration>
              <contextDirectory>${project.build.directory}/assembled-docker/guimanager</contextDirectory>
              <repository>${env.DOCKER_REGISTRY}ev-guimanager</repository>
              <classifier>docker-info-guimanager</classifier>
              <tag>${project.name}-${project.version}</tag>
            </configuration>
          </execution>
          <execution>
            <id>docker-criteriaapi</id>
            <goals>
              <goal>build</goal>
              <goal>push</goal>
            </goals>
            <configuration>
              <contextDirectory>${project.build.directory}/assembled-docker/criteriaapi</contextDirectory>
              <repository>${env.DOCKER_REGISTRY}ev-criteriaapi</repository>
              <classifier>docker-info-criteriaapi</classifier>
              <tag>${project.name}-${project.version}</tag>
            </configuration>
          </execution>
          <execution>
            <id>docker-profileengine</id>
            <goals>
              <goal>build</goal>
              <goal>push</goal>
            </goals>
            <configuration>
              <contextDirectory>${project.build.directory}/assembled-docker/profileengine</contextDirectory>
              <repository>${env.DOCKER_REGISTRY}ev-profileengine</repository>
              <classifier>docker-info-profileengine</classifier>
              <tag>${project.name}-${project.version}</tag>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.0.0</version>
        <executions>

          <execution>
            <id>tgzPackage</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <attach>false</attach>
              <descriptors>
                <descriptor>src/assembly/tgzPackage.xml</descriptor>
              </descriptors>
              <appendAssemblyId>false</appendAssemblyId>
            </configuration>
          </execution>

          <execution>
            <id>tgzClient</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <attach>false</attach>
              <descriptors>
                <descriptor>src/assembly/tgzClient.xml</descriptor>
              </descriptors>
              <finalName>${project.artifactId}-${project.version}-client</finalName>
              <appendAssemblyId>false</appendAssemblyId>
            </configuration>
          </execution>

        </executions>
      </plugin>

    </plugins>

  </build>

</project>
