propensityengine-<_KEY_>:
  image: ${env.DOCKER_REGISTRY}ev-guimanager:${project.name}-${project.version}
  user: '<_DOCKER_UID_>:<_DOCKER_GID_>'
  environment:
    KAFKA_BROKER_ID: ignored
    KAFKA_ZOOKEEPER_CONNECT: ignored
    CUB_ZOOKEEPER_MIN_NODES: <_ZOOKEEPER_MIN_NODES_>
    CUB_ZOOKEEPER_TIMEOUT: <_STARTUP_DEPENDENCY_TIMEOUT_>
    BROKER_SERVERS: <_BROKER_SERVERS_>
    BROKER_COUNT: <_BROKER_COUNT_>
    CUB_BROKER_MIN_NODES: <_BROKER_MIN_NODES_>
    CUB_KAFKA_TIMEOUT: <_STARTUP_DEPENDENCY_TIMEOUT_>
    REGISTRY_SERVERS: <_REGISTRY_SERVERS_>
    CUB_REGISTRY_MIN_NODES: <_REGISTRY_MIN_NODES_>
    CUB_SCHEMA_REGISTRY_TIMEOUT: <_STARTUP_DEPENDENCY_TIMEOUT_>
    ZOOKEEPER_SERVERS: <_ZOOKEEPER_SERVERS_>
    KAFKA_REPLICATION_FACTOR: <_KAFKA_REPLICATION_FACTOR_>
    KAFKA_STREAMS_STANDBY_REPLICAS: <_KAFKA_STREAMS_STANDBY_REPLICAS_>
    PROPENSITYENGINE_STREAMTHREADS: <_PROPENSITYENGINE_STREAMTHREADS_>
    TRACE_LEVEL: <_TRACE_LEVEL_>
    KEY: "<_KEY_>"
    KAFKA_DEBUG: <_PROPENSITYENGINE_DEBUG_>
    JAVA_DEBUG_OPTS: -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=<_DEBUG_PORT_>,suspend=n
    KAFKA_HEAP_OPTS: <_PROPENSITYENGINE_HEAP_OPTS_>
    KAFKA_OPTS: -javaagent:/app/jars/jmx_prometheus_javaagent-${jmx_prometheus_javaagent.version}.jar=<_MONITORING_PORT_>:/app/config/propensityengine_jmx.yml -Dnglm.schemaRegistryURL=<_REGISTRY_URL_> -Dnglm.converter=Avro -Dzookeeper.connect=<_ZOOKEEPER_SERVERS_> -Dbroker.servers=<_BROKER_SERVERS_> -Dnglm.zookeeper.root=${zookeeper.root} -Dredis.sentinels=<_REDIS_SENTINELS_> -Dredis.password=<_REDIS_PASSWORD_> -Dsubscriberprofile.endpoints=<_EVOLUTIONENGINE_SUBSCRIBERPROFILE_ENDPOINTS_> -Duse.regression=<_USE_REGRESSION_>
    ENTRYPOINT: propensityengine
  volumes:
    - type: bind
      source: <_NGLM_STREAMS_RUNTIME_>/streams-propensityengine-<_KEY_>
      target: /app/runtime
  deploy: 
    restart_policy:
      condition: <_DOCKER_RESTART_POLICY_>
      delay: 5s
      max_attempts: 3
      window: 120s
    mode: replicated
    replicas: 1
    placement:
      constraints:
        - engine.labels.hostname == <_HOST_>
  networks:
    - outside
