#
#  global config
#

global:
  scrape_interval:     30s # Set the scrape interval to every 30 seconds. Default is every 1 minute.
  evaluation_interval: 30s # Evaluate rules every 30 seconds. The default is every 1 minute.
  scrape_timeout:      30s # scrape timeout to 30 seconds. The default is 10 seconds


  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'prometheus-application'

#
#  rules -- load rules once and periodically evaluate them according to the global 'evaluation_interval'.
#    

rule_files:
  - "prometheus-application-alert.rules"

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
       - <_MONITORING_HOST_>:<_ALERTMANAGER_PORT_>

# 
#  scrape configs
#

scrape_configs:
  # prometheus job
  - job_name: 'prometheus_application'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['<_MONITORING_HOST_>:<_PROMETHEUS_APPLICATION_PORT_>']

  # evolutionengine job
  - job_name: 'evolutionengine'

    # main config
    static_configs:
      - targets: [<_EVOLUTIONENGINE_PROMETHEUS_>]

  # ucgengine job
  - job_name: 'ucgengine'

    # main config
    static_configs:
      - targets: [<_UCGENGINE_PROMETHEUS_>]

  # infulfillmentmanager job
  - job_name: 'infulfillmentmanager'

    # main config
    static_configs:
      - targets: [<_INFULFILLMENTMANAGER_PROMETHEUS_>]
      
  # emptyfulfillmentmanager job
  - job_name: 'emptyfulfillmentmanager'

    # main config
    static_configs:
      - targets: [<_EMPTYFULFILLMENTMANAGER_PROMETHEUS_>]
      
  # commoditydeliverymanager job
  - job_name: 'commoditydeliverymanager'

    # main config
    static_configs:
      - targets: [<_COMMODITYDELIVERYMANAGER_PROMETHEUS_>]
      
  # purchasefulfillmentmanager job
  - job_name: 'purchasefulfillmentmanager'

    # main config
    static_configs:
      - targets: [<_PURCHASEFULFILLMENTMANAGER_PROMETHEUS_>]

  # notificationmanager job
  - job_name: 'notificationmanager'

    # main config
    static_configs:
      - targets: [<_NOTIFICATIONMANAGER_PROMETHEUS_>]

  # notificationmanager job
  - job_name: 'notificationmanagersms'

    # main config
    static_configs:
      - targets: [<_NOTIFICATIONMANAGER_SMS_PROMETHEUS_>]

  # notificationmanager job
  - job_name: 'notificationmanagermail'

    # main config
    static_configs:
      - targets: [<_NOTIFICATIONMANAGER_MAIL_PROMETHEUS_>]

  # notificationmanager job
  - job_name: 'notificationmanagerpush'

    # main config
    static_configs:
      - targets: [<_NOTIFICATIONMANAGER_PUSH_PROMETHEUS_>]

  # reportmanager job
  - job_name: 'reportmanager'

    # main config
    static_configs:
      - targets: [<_REPORTMANAGER_PROMETHEUS_>]

  # reportscheduler job
  - job_name: 'reportscheduler'

    # main config
    static_configs:
      - targets: [<_REPORTSCHEDULER_PROMETHEUS_>]

  # datacubemanager job
  - job_name: 'datacubemanager'

    # main config
    static_configs:
      - targets: [<_DATACUBEMANAGER_PROMETHEUS_>]
      
  # guimanager job
  - job_name: 'guimanager'

    # main config
    static_configs:
      - targets: ['<_GUIMANAGER_HOST_>:<_GUIMANAGER_MONITORING_PORT_>']

  # thirdpartymanager job
  - job_name: 'thirdpartymanager'

    # main config
    static_configs:
      - targets: [<_THIRDPARTYMANAGER_PROMETHEUS_>]

  # dnboproxy job
  - job_name: 'dnboproxy'

    # main config
    static_configs:
      - targets: [<_DNBOPROXY_PROMETHEUS_>]

 # kafka lag exporter job
  - job_name: 'kafkalagexporter'

    # main config
    static_configs:
      - targets: [<_KAFKA_LAG_EXPORTER_URL_>]

  # extractmanager job
  - job_name: 'extractmanager'

    # main config
    static_configs:
      - targets: [<_EXTRACTMANAGER_PROMETHEUS_>]
